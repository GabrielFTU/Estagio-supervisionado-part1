// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Valisys_Production.Data;

#nullable disable

namespace Valisys_Production.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251101123529_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Valisys_Production.Models.Almoxarifado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Almoxarifados");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000009"),
                            Ativo = true,
                            Contato = "(67) 99999-9999",
                            DataCadastro = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descricao = "Almoxarifado principal",
                            Email = "almoxarifado@empresa.com",
                            Localizacao = "Galpão 1",
                            Nome = "Almoxarifado Geral",
                            Responsavel = "Sistema"
                        });
                });

            modelBuilder.Entity("Valisys_Production.Models.CategoriaProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("CategoriasProduto");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000006"),
                            Descricao = "VP",
                            Nome = "Veículos Pesados"
                        });
                });

            modelBuilder.Entity("Valisys_Production.Models.FaseProducao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FasesProducao");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000004"),
                            Descricao = "Início da montagem do chassi.",
                            Nome = "MONTAGEM INICIAL",
                            Ordem = 1
                        },
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000013"),
                            Descricao = "Área de preparação e pintura.",
                            Nome = "PINTURA",
                            Ordem = 2
                        },
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000014"),
                            Descricao = "Instalação de motor e acabamentos.",
                            Nome = "MONTAGEM FINAL",
                            Ordem = 3
                        },
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000015"),
                            Descricao = "Checagem final antes da expedição.",
                            Nome = "TESTE DE QUALIDADE",
                            Ordem = 4
                        });
                });

            modelBuilder.Entity("Valisys_Production.Models.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Valisys_Production.Models.Lote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlmoxarifadoId")
                        .HasColumnType("uuid");

                    b.Property<string>("CodigoLote")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<int>("statusLote")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("Valisys_Production.Models.Movimentacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlmoxarifadoDestinoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlmoxarifadoOrigemId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("OrdemDeProducaoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoDestinoId");

                    b.HasIndex("AlmoxarifadoOrigemId");

                    b.HasIndex("OrdemDeProducaoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Movimentacoes");
                });

            modelBuilder.Entity("Valisys_Production.Models.OrdemDeProducao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlmoxarifadoId")
                        .HasColumnType("uuid");

                    b.Property<string>("CodigoOrdem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FaseAtualId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LoteId")
                        .HasColumnType("uuid");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<Guid?>("SolicitacaoProducaoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("TipoOrdemDeProducaoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoId");

                    b.HasIndex("FaseAtualId");

                    b.HasIndex("LoteId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("SolicitacaoProducaoId")
                        .IsUnique();

                    b.HasIndex("TipoOrdemDeProducaoId");

                    b.ToTable("OrdensDeProducao");
                });

            modelBuilder.Entity("Valisys_Production.Models.Perfil", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Perfis");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000001"),
                            Nome = "Administrador"
                        },
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000010"),
                            Nome = "Gerente PCP"
                        },
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000011"),
                            Nome = "Encarregado Producao"
                        });
                });

            modelBuilder.Entity("Valisys_Production.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<Guid>("CategoriaProdutoId")
                        .HasColumnType("uuid");

                    b.Property<string>("CodigoInternoProduto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("ControlarPorLote")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("UnidadeMedidaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaProdutoId");

                    b.HasIndex("UnidadeMedidaId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000005"),
                            Ativo = true,
                            CategoriaProdutoId = new Guid("c0de0000-0000-0000-0000-000000000006"),
                            CodigoInternoProduto = "CA-ALFA-001",
                            ControlarPorLote = true,
                            DataCadastro = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descricao = "Caminhão de teste para Lote.",
                            Nome = "Caminhão Alpha",
                            Observacoes = "Produto de teste para inicio do sistema",
                            UnidadeMedidaId = new Guid("c0de0000-0000-0000-0000-000000000002")
                        });
                });

            modelBuilder.Entity("Valisys_Production.Models.SolicitacaoProducao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodigoSolicitacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataAprovacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EncarregadoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("TipoOrdemDeProducaoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioAprovacaoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EncarregadoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("TipoOrdemDeProducaoId");

                    b.HasIndex("UsuarioAprovacaoId");

                    b.ToTable("SolicitacoesProducao");
                });

            modelBuilder.Entity("Valisys_Production.Models.SolicitacaoProducaoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<Guid>("SolicitacaoProducaoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("SolicitacaoProducaoId");

                    b.ToTable("SolicitacaoProducaoItens");
                });

            modelBuilder.Entity("Valisys_Production.Models.TipoOrdemDeProducao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("TiposDeOrdemDeProducao");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000008"),
                            Descricao = "NOR",
                            Nome = "Normal"
                        });
                });

            modelBuilder.Entity("Valisys_Production.Models.UnidadeMedida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.ToTable("UnidadesMedida");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000002"),
                            Nome = "Unidade",
                            Sigla = "UN"
                        },
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000003"),
                            Nome = "Kilograma",
                            Sigla = "KG"
                        },
                        new
                        {
                            Id = new Guid("c0de0000-0000-0000-0000-000000000012"),
                            Nome = "Metro",
                            Sigla = "M"
                        });
                });

            modelBuilder.Entity("Valisys_Production.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("uuid");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Valisys_Production.Models.Lote", b =>
                {
                    b.HasOne("Valisys_Production.Models.Almoxarifado", "Almoxarifado")
                        .WithMany()
                        .HasForeignKey("AlmoxarifadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valisys_Production.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Almoxarifado");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Valisys_Production.Models.Movimentacao", b =>
                {
                    b.HasOne("Valisys_Production.Models.Almoxarifado", "AlmoxarifadoDestino")
                        .WithMany()
                        .HasForeignKey("AlmoxarifadoDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Valisys_Production.Models.Almoxarifado", "AlmoxarifadoOrigem")
                        .WithMany()
                        .HasForeignKey("AlmoxarifadoOrigemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Valisys_Production.Models.OrdemDeProducao", "OrdemDeProducao")
                        .WithMany()
                        .HasForeignKey("OrdemDeProducaoId");

                    b.HasOne("Valisys_Production.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valisys_Production.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AlmoxarifadoDestino");

                    b.Navigation("AlmoxarifadoOrigem");

                    b.Navigation("OrdemDeProducao");

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Valisys_Production.Models.OrdemDeProducao", b =>
                {
                    b.HasOne("Valisys_Production.Models.Almoxarifado", "Almoxarifado")
                        .WithMany()
                        .HasForeignKey("AlmoxarifadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valisys_Production.Models.FaseProducao", "FaseAtual")
                        .WithMany("OrdensDeProducao")
                        .HasForeignKey("FaseAtualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valisys_Production.Models.Lote", "Lote")
                        .WithMany("OrdensDeProducao")
                        .HasForeignKey("LoteId");

                    b.HasOne("Valisys_Production.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valisys_Production.Models.SolicitacaoProducao", "SolicitacaoProducao")
                        .WithOne("OrdemDeProducao")
                        .HasForeignKey("Valisys_Production.Models.OrdemDeProducao", "SolicitacaoProducaoId");

                    b.HasOne("Valisys_Production.Models.TipoOrdemDeProducao", "TipoOrdemDeProducao")
                        .WithMany("OrdensDeProducao")
                        .HasForeignKey("TipoOrdemDeProducaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Almoxarifado");

                    b.Navigation("FaseAtual");

                    b.Navigation("Lote");

                    b.Navigation("Produto");

                    b.Navigation("SolicitacaoProducao");

                    b.Navigation("TipoOrdemDeProducao");
                });

            modelBuilder.Entity("Valisys_Production.Models.Produto", b =>
                {
                    b.HasOne("Valisys_Production.Models.CategoriaProduto", "CategoriaProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valisys_Production.Models.UnidadeMedida", "UnidadeMedida")
                        .WithMany("Produtos")
                        .HasForeignKey("UnidadeMedidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaProduto");

                    b.Navigation("UnidadeMedida");
                });

            modelBuilder.Entity("Valisys_Production.Models.SolicitacaoProducao", b =>
                {
                    b.HasOne("Valisys_Production.Models.Usuario", "Encarregado")
                        .WithMany()
                        .HasForeignKey("EncarregadoId");

                    b.HasOne("Valisys_Production.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valisys_Production.Models.TipoOrdemDeProducao", "TipoOrdemDeProducao")
                        .WithMany()
                        .HasForeignKey("TipoOrdemDeProducaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valisys_Production.Models.Usuario", "UsuarioAprovacao")
                        .WithMany()
                        .HasForeignKey("UsuarioAprovacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encarregado");

                    b.Navigation("Produto");

                    b.Navigation("TipoOrdemDeProducao");

                    b.Navigation("UsuarioAprovacao");
                });

            modelBuilder.Entity("Valisys_Production.Models.SolicitacaoProducaoItem", b =>
                {
                    b.HasOne("Valisys_Production.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valisys_Production.Models.SolicitacaoProducao", "SolicitacaoProducao")
                        .WithMany("Itens")
                        .HasForeignKey("SolicitacaoProducaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("SolicitacaoProducao");
                });

            modelBuilder.Entity("Valisys_Production.Models.Usuario", b =>
                {
                    b.HasOne("Valisys_Production.Models.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Valisys_Production.Models.CategoriaProduto", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Valisys_Production.Models.FaseProducao", b =>
                {
                    b.Navigation("OrdensDeProducao");
                });

            modelBuilder.Entity("Valisys_Production.Models.Lote", b =>
                {
                    b.Navigation("OrdensDeProducao");
                });

            modelBuilder.Entity("Valisys_Production.Models.Perfil", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Valisys_Production.Models.SolicitacaoProducao", b =>
                {
                    b.Navigation("Itens");

                    b.Navigation("OrdemDeProducao")
                        .IsRequired();
                });

            modelBuilder.Entity("Valisys_Production.Models.TipoOrdemDeProducao", b =>
                {
                    b.Navigation("OrdensDeProducao");
                });

            modelBuilder.Entity("Valisys_Production.Models.UnidadeMedida", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
